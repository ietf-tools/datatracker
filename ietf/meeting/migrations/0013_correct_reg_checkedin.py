# Generated by Django 4.2.21 on 2025-05-20 22:28

'''
The original migration had a flaw. If a participant had both a remote and onsite
registration, which is rare but does occur, which registration the checkedin state
came from was indeterminate. If it came from the remote registration it would be
False which might be wrong. This migration finds all registrations with onsite tickets
and checkedin is False, and checks if it is correct, and fixes if needed.
'''

from django.db import migrations
import datetime


def forward(apps, schema_editor):
    Registration = apps.get_model('meeting', 'Registration')
    MeetingRegistration = apps.get_model('stats', 'MeetingRegistration')
    today = datetime.date.today()
    for reg in Registration.objects.filter(tickets__attendance_type__slug='onsite', checkedin=False, meeting__date__lt=today).order_by('meeting__number'):
        # get original MeetingRegistration
        mregs = MeetingRegistration.objects.filter(meeting=reg.meeting, email=reg.email, reg_type='onsite')
        mregs_checkedin = [mr.checkedin for mr in mregs]
        if any(mregs_checkedin):
            reg.checkedin = True
            reg.save()
            print(f'updating {reg.meeting}:{reg.email}:{reg.pk}')


def reverse(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("meeting", "0012_registration_registrationticket"),
    ]

    operations = [
        migrations.RunPython(forward, reverse),
    ]
