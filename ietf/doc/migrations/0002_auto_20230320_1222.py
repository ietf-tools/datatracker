# Generated by Django 2.2.28 on 2023-03-20 19:22

from django.db import migrations, models
import django.db.models.deletion
import ietf.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("message", "0001_initial"),
        ("name", "0001_initial"),
        ("person", "0001_initial"),
        ("review", "0001_initial"),
        ("group", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("submit", "0001_initial"),
        ("doc", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="document",
            name="group",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="group.Group",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="intended_std_level",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.IntendedStdLevelName",
                verbose_name="Intended standardization level",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="shepherd",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shepherd_document_set",
                to="person.Email",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="states",
            field=models.ManyToManyField(blank=True, to="doc.State"),
        ),
        migrations.AddField(
            model_name="document",
            name="std_level",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.StdLevelName",
                verbose_name="Standardization level",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="stream",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.StreamName",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="tags",
            field=models.ManyToManyField(blank=True, to="name.DocTagName"),
        ),
        migrations.AddField(
            model_name="document",
            name="type",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.DocTypeName",
            ),
        ),
        migrations.AddField(
            model_name="docreminder",
            name="event",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doc.DocEvent"
            ),
        ),
        migrations.AddField(
            model_name="docreminder",
            name="type",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="name.DocReminderTypeName",
            ),
        ),
        migrations.AddField(
            model_name="dochistoryauthor",
            name="document",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documentauthor_set",
                to="doc.DocHistory",
            ),
        ),
        migrations.AddField(
            model_name="dochistoryauthor",
            name="email",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                help_text="Email address used by author for submission",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="person.Email",
            ),
        ),
        migrations.AddField(
            model_name="dochistoryauthor",
            name="person",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="person.Person"
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="ad",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ad_dochistory_set",
                to="person.Person",
                verbose_name="area director",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="doc",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="history_set",
                to="doc.Document",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="formal_languages",
            field=models.ManyToManyField(
                blank=True,
                help_text="Formal languages used in document",
                to="name.FormalLanguageName",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="group",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="group.Group",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="intended_std_level",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.IntendedStdLevelName",
                verbose_name="Intended standardization level",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="shepherd",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shepherd_dochistory_set",
                to="person.Email",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="states",
            field=models.ManyToManyField(blank=True, to="doc.State"),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="std_level",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.StdLevelName",
                verbose_name="Standardization level",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="stream",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.StreamName",
            ),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="tags",
            field=models.ManyToManyField(blank=True, to="name.DocTagName"),
        ),
        migrations.AddField(
            model_name="dochistory",
            name="type",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.DocTypeName",
            ),
        ),
        migrations.AddField(
            model_name="docextresource",
            name="doc",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doc.Document"
            ),
        ),
        migrations.AddField(
            model_name="docextresource",
            name="name",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="name.ExtResourceName"
            ),
        ),
        migrations.AddField(
            model_name="docevent",
            name="by",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="person.Person"
            ),
        ),
        migrations.AddField(
            model_name="docevent",
            name="doc",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doc.Document"
            ),
        ),
        migrations.AddField(
            model_name="docalias",
            name="docs",
            field=models.ManyToManyField(related_name="docalias", to="doc.Document"),
        ),
        migrations.AddField(
            model_name="deletedevent",
            name="by",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="person.Person"
            ),
        ),
        migrations.AddField(
            model_name="deletedevent",
            name="content_type",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="ballottype",
            name="doc_type",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.DocTypeName",
            ),
        ),
        migrations.AddField(
            model_name="ballottype",
            name="positions",
            field=models.ManyToManyField(blank=True, to="name.BallotPositionName"),
        ),
        migrations.CreateModel(
            name="IRSGBallotDocEvent",
            fields=[
                (
                    "ballotdocevent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="doc.BallotDocEvent",
                    ),
                ),
                ("duedate", models.DateTimeField(blank=True, null=True)),
            ],
            bases=("doc.ballotdocevent",),
        ),
        migrations.AddField(
            model_name="submissiondocevent",
            name="submission",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="submit.Submission"
            ),
        ),
        migrations.AddField(
            model_name="statedocevent",
            name="state",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="doc.State",
            ),
        ),
        migrations.AddField(
            model_name="statedocevent",
            name="state_type",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doc.StateType"
            ),
        ),
        migrations.AddField(
            model_name="reviewrequestdocevent",
            name="review_request",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="review.ReviewRequest"
            ),
        ),
        migrations.AddField(
            model_name="reviewrequestdocevent",
            name="state",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.ReviewRequestStateName",
            ),
        ),
        migrations.AddField(
            model_name="reviewassignmentdocevent",
            name="review_assignment",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="review.ReviewAssignment",
            ),
        ),
        migrations.AddField(
            model_name="reviewassignmentdocevent",
            name="state",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="name.ReviewAssignmentStateName",
            ),
        ),
        migrations.AddIndex(
            model_name="documentauthor",
            index=models.Index(
                fields=["document", "order"], name="doc_documen_documen_7fabe2_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="documentactionholder",
            constraint=models.UniqueConstraint(
                fields=("document", "person"), name="unique_action_holder"
            ),
        ),
        migrations.AddIndex(
            model_name="dochistoryauthor",
            index=models.Index(
                fields=["document", "order"], name="doc_dochist_documen_7e2441_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="docevent",
            index=models.Index(
                fields=["type", "doc"], name="doc_doceven_type_43e53e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="docevent",
            index=models.Index(
                fields=["-time", "-id"], name="doc_doceven_time_1a258f_idx"
            ),
        ),
        migrations.AddField(
            model_name="bofreqresponsibledocevent",
            name="responsible",
            field=models.ManyToManyField(blank=True, to="person.Person"),
        ),
        migrations.AddField(
            model_name="bofreqeditordocevent",
            name="editors",
            field=models.ManyToManyField(blank=True, to="person.Person"),
        ),
        migrations.AddField(
            model_name="ballotpositiondocevent",
            name="ballot",
            field=ietf.utils.models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="doc.BallotDocEvent",
            ),
        ),
        migrations.AddField(
            model_name="ballotpositiondocevent",
            name="balloter",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="person.Person"
            ),
        ),
        migrations.AddField(
            model_name="ballotpositiondocevent",
            name="pos",
            field=ietf.utils.models.ForeignKey(
                default="norecord",
                on_delete=django.db.models.deletion.CASCADE,
                to="name.BallotPositionName",
                verbose_name="position",
            ),
        ),
        migrations.AddField(
            model_name="ballotdocevent",
            name="ballot_type",
            field=ietf.utils.models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doc.BallotType"
            ),
        ),
        migrations.AddField(
            model_name="addedmessageevent",
            name="in_reply_to",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="doc_irtomanual",
                to="message.Message",
            ),
        ),
        migrations.AddField(
            model_name="addedmessageevent",
            name="message",
            field=ietf.utils.models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="doc_manualevents",
                to="message.Message",
            ),
        ),
    ]
