.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "YANG2DSDL" "1" "2024-05-23" "yang2dsdl-2.6.1" "User Manual"
.hy
.SH NAME
.PP
yang2dsdl - translates YANG data models to DSDL schemas and validates
instance documents.
.SH SYNOPSIS
.PP
\f[B]yang2dsdl\f[R] [-t \f[I]target\f[R]] [-d \f[I]dir\f[R]] [-b
\f[I]basename\f[R]] [-j] [-x] [-c] [-v \f[I]instance\f[R]]
\f[I]file\f[R]\&...
.PP
\f[B]yang2dsdl\f[R] -L [-t \f[I]target\f[R]] [-d \f[I]dir\f[R]] [-b
\f[I]basename\f[R]] [-j] [-x] [-c] [-v \f[I]instance\f[R]]
\f[I]file\f[R]\&...
.PP
\f[B]yang2dsdl\f[R] -s [-t \f[I]target\f[R]] [-d \f[I]dir\f[R]] [-b
\f[I]basename\f[R]] [-j] [-x] [-c] [-v \f[I]instance\f[R]]
.PP
\f[B]yang2dsdl\f[R] -h
.SH DESCRIPTION
.PP
This shell script facilitates the translation of a data model described
by one or more input YANG modules to DSDL schemas (RELAX NG, Schematron
and DSRL) for a selected instance XML document type, as described in
\f[B]RFC\ 6110\f[R].
Optionally, the script can validate an instance document of the given
type against the schemas.
.PP
The input YANG module(s) may be given either directly as \f[I]file\f[R]
parameter(s) on the command line, or indirectly through a server <hello>
message which also declares capabilities and features supported by the
server.
The latter alternative is indicated by the \f[B]-L\f[R] switch, and only
one \f[I]file\f[R] parameter may be given in this case.
.PP
Input YANG module(s) may be expressed in YANG or YIN syntax.
The output DSDL schemas are written to the directory \f[I]dir\f[R]
(current directory by default).
Unless the option \f[B]-s\f[R] is used, this directory must be writable.
.PP
Metadata annotations are also supported, if they are defined and used as
described in \f[B]RFC\ 7952\f[R].
.PP
The script can be executed by any shell interpreter compatible with
POSIX.2, such as \f[B]bash\f[R](1) or \f[B]dash\f[R](1).
.PP
The \f[I]target\f[R] argument specifies the type of the target instance
document.
Supported values are:
.TP
data
Datastore contents (configuration and state data) encapsulated in
<nc:data> document element.
.TP
config
A configuration datastore contents encapsulated in <nc:config> document
element.
.TP
get-reply
A complete NETCONF message containing a reply to the <nc:get> operation.
.TP
get-data-reply
A complete NETCONF message containing a reply to the <ncds:get-data>
operation.
.TP
get-config-reply
A complete NETCONF message containing a reply to the <nc:get-config>
operation.
.TP
edit-config
A complete NETCONF message containing an <nc:edit-config> request.
Only the RELAX NG schema is generated for this target.
.TP
rpc
An RPC request defined in an input YANG module.
.TP
rpc-reply
An RPC reply defined in an input YANG module.
.TP
notification
An event notification defined in an input YANG module.
.PP
The output schemas are contained in the following four files whose names
depend on the arguments \f[I]basename\f[R] and \f[I]target\f[R]:
.TP
\f[I]basename\f[R]-\f[I]target\f[R].rng
RELAX NG schema for the target document type.
.TP
\f[I]basename\f[R]-gdefs-config.rng, \f[I]basename\f[R]-gdefs-edit.rng, \f[I]basename\f[R]-gdefs.rng
Auxiliary RELAX NG schema containing global named pattern definitions.
The first is generated for \[lq]config\[rq] and
\[lq]get-config-reply\[rq] targets, the second for \[lq]edit-config\[rq]
and the third for the remaining targets.
.TP
\f[I]basename\f[R]-\f[I]target\f[R].sch
Schematron schema for the target document type.
Not generated for the \[lq]edit-config\[rq] target.
.TP
\f[I]basename\f[R]-\f[I]target\f[R].dsrl
DSRL schema for the target document type.
Not generated for the \[lq]edit-config\[rq] target.
.PP
Optional validation of an XML document stored in the file
\f[I]instance\f[R] proceeds as follows:
.IP "1." 3
Grammatical and datatype constraints are checked using the RELAX NG
schema.
.IP "2." 3
The DSRL schema is used for adding default values together with ancestor
containers to the instance document where necessary.
.IP "3." 3
Semantic constraints are checked using the Schematron schema.
The skeleton implementation of \f[B]ISO Schematron\f[R] by Rick Jelliffe
is included in the distribution and used for this purpose.
.PP
Steps 3 and 3 are not performed for the \[lq]edit-config\[rq] target, or
if step 1 reports any errors.
.PP
Option \f[B]-s\f[R] may be used together with \f[B]-v\f[R] for
validating an instance document without generating the schemas.
This assumes that the schemas are already present in the directory
selected by the \f[B]-d\f[R] option (current directory by default).
In this case, the basename of the schemas must be specified using
\f[B]-b\f[R] \f[I]basename\f[R] and the input YANG modules need not be
given.
Also, if the DSRL or Schematron schema is missing, the corresponding
step is skipped.
.PP
The script uses programs from the libxml2 suite - \f[B]xmllint\f[R](1)
for RELAX NG validation and \f[B]xsltproc\f[R](1) for performing XSLT
transformations.
Alternatively, \f[B]jing\f[R](1) can be used for RELAX NG validation
(option \f[B]-j\f[R]).
If necessary, the script could be easily modified for use with other
RELAX NG validators and/or XSLT1 processors supporting EXSLT.
.SH OPTIONS
.TP
\f[B]-b\f[R] \f[I]basename\f[R]
Specifies the basename of files in which the output schemas are stored.
The default is the concatenation of the names of all input YANG modules
connected with the underscore character \[lq]_\[lq].
This option is mandatory if \f[B]-s\f[R] is used.
.TP
\f[B]-d\f[R] \f[I]dir\f[R]
Specifies the directory for output files.
By default they are stored in the current directory.
.TP
\f[B]-h\f[R]
Displays help screen and exits.
.TP
\f[B]-j\f[R]
Uses \f[B]jing\f[R](1) for RELAX NG validation instead of the default
\f[B]xmllint\f[R](1).
.TP
\f[B]-L\f[R]
Interpret the \f[I]file\f[R] parameter as the name of a file containing
a server <hello> message.
In this case, exactly one \f[I]file\f[R] parameter must be given.
.TP
\f[B]-s\f[R]
Performs just validation, without (re)generating the schemas.
This option is only allowed together with \f[B]-v\f[R] and \f[B]-b\f[R]
\f[I]basename\f[R] must also be specified.
.TP
\f[B]-t\f[R] \f[I]target\f[R]
Specifies the target XML document type using one of the following
strings as explained above: \f[B]data\f[R] (default), \f[B]config\f[R],
\f[B]get-reply\f[R], \f[B]get-data-reply\f[R],
\f[B]get-config-reply\f[R], \f[B]edit-config\f[R], \f[B]rpc\f[R],
\f[B]rpc-reply\f[R] or \f[B]notification\f[R].
.TP
\f[B]-v\f[R] \f[I]instance\f[R]
Validates an instance XML document contained in file \f[I]instance\f[R].
.TP
\f[B]-x\f[R]
Try to translate modules written in unsupported YANG versions.
If the module doesn\[cq]t use any constructs introduced after YANG
version 1, this may work.
This option may produce unexpected results.
Use at own risk.
.TP
\f[B]-c\f[R]
Use only definitions with status \[lq]current\[rq] in the YANG module.
.SH FILES
.TP
/usr/local/share/yang/xslt/gen-relaxng.xsl
XSLT stylesheet generating RELAX NG schemas.
.TP
/usr/local/share/yang/xslt/gen-schematron.xsl
XSLT stylesheet generating DSRL schemas.
.TP
/usr/local/share/yang/xslt/gen-common.xsl
Common templates for all three XSLT generators.
.TP
/usr/local/share/yang/xslt/dsrl2xslt.xsl
Translates a subset of DSRL containing only specification of default
contents to an XSLT stylesheet.
.TP
/usr/local/share/yang/xslt/svrl2text.xsl
Translates an SVRL report to plain text.
.TP
/usr/local/share/yang/schema/relaxng-lib.rng
RELAX NG library of common NETCONF elements.
.TP
/usr/local/share/yang/schema/edit-config-attributes.rng
RELAX NG definitions of <edit-config> attributes.
.SH ENVIRONMENT VARIABLES
.TP
\f[B]PYANG_XSLT_DIR\f[R]
Alternative directory for XSLT stylesheets.
The default is installation dependent.
.TP
\f[B]PYANG_RNG_LIBDIR\f[R]
Alternative directory for the RELAX NG library.
The default is installation dependent.
.TP
\f[B]XSLT_OPTS\f[R]
Options to pass to the XSLT processor when generating the DSDL schemas.
This is mainly useful for debugging.
.SH EXAMPLES
.IP
.nf
\f[C]
$ yang2dsdl -v dhcp-data.xml dhcp.yang
\f[R]
.fi
.PP
This command generates the DSDL schemas for the datastore contents
(default \f[I]data\f[R] target) as defined by dhcp.yang module and
validates an instance document stored in the dhcp-data.xml file.
.IP
.nf
\f[C]
$ yang2dsdl -t rpc rpc-rock.yang
\f[R]
.fi
.PP
This command generates DSDL schemas for the choice of input parts
(requests) of all RPC operations defined in the module rpc-rock.yang.
.SH DIAGNOSTICS
.PP
\f[B]yang2dsdl\f[R] return codes have the following meaning:
.TP
0
No error (normal termination)
.TP
1
Error in input parameters
.TP
2
Error in DSDL schema generation
.TP
3
Instance validation failed
.SH BUGS
.IP "1." 3
The logic of command-line arguments may not be able to distinguish
replies to different RPC requests, for example if the replies have the
same top-level element.
.SH SEE ALSO
.PP
\f[B]pyang\f[R](1), \f[B]xsltproc\f[R](1), \f[B]xmllint\f[R](1),
\f[B]RFC 61110\f[R].
.SH AUTHOR
.PP
\f[B]Ladislav Lhotka\f[R] <lhotka\[at]nic.cz>
.PD 0
.P
.PD
CZ.NIC
